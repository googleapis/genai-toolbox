# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: langchain
on:
  pull_request:
    paths:
      - 'sdks/langchain/**'
      - '!sdks/langchain/**/*.md'


jobs:
  lint:
    if: "${{ github.event.action != 'labeled' || github.event.label.name == 'tests: run' }}"
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      issues: 'write'
      pull-requests: 'write'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Remove PR Label
        if: "${{ github.event.action == 'labeled' && github.event.label.name == 'tests: run' }}"
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.removeLabel({
                name: 'tests: run',
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number
              });
            } catch (e) {
              console.log('Failed to remove label. Another job may have already removed it!');
            }
      - name: Checkout Repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.11"

      - name: Install SDK and requirements
        run: pip install sdks/langchain[test]

      - name: Install test requirements
        run: pip install mypy==1.13.0 black==24.10.0 isort==5.13.2

      - name: Run linters
        run: |
          black --check .
          isort --check .

      - name: Create mypy cache directory
        run: mkdir -p ~/.mypy_cache

      - name: Set mypy cache directory
        run: |
          echo "MYPY_CACHE_DIR=~/.mypy_cache" >> $GITHUB_ENV

      - name: Cache mypy cache
        uses: actions/cache@v3
        with:
          path: ~/.mypy_cache
          key: ${{ runner.os }}-mypy-${{ hashFiles('**/mypy.ini') }}
          restore-keys: |
            ${{ runner.os }}-mypy-

      - name: Run type-check
        run: mypy --install-types --non-interactive --explicit-package-bases sdks/langchain
